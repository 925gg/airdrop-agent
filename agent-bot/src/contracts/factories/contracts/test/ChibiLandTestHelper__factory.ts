/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChibiLandTestHelper,
  ChibiLandTestHelperInterface,
} from "../../../contracts/test/ChibiLandTestHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReceivingTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setAllowReceiving",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506102408061002d6000396000f3fe60806040526004361061002d5760003560e01c8063150b7a02146100755780634cf44ced146100ef57600080fd5b366100705760005460ff1661006e576040517ff8275c7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b34801561008157600080fd5b506100ba610090366004610146565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b3480156100fb57600080fd5b5061006e61010a3660046101e1565b6000805460ff1916911515919091179055565b803573ffffffffffffffffffffffffffffffffffffffff8116811461014157600080fd5b919050565b60008060008060006080868803121561015e57600080fd5b6101678661011d565b94506101756020870161011d565b935060408601359250606086013567ffffffffffffffff8082111561019957600080fd5b818801915088601f8301126101ad57600080fd5b8135818111156101bc57600080fd5b8960208285010111156101ce57600080fd5b9699959850939650602001949392505050565b6000602082840312156101f357600080fd5b8135801515811461020357600080fd5b939250505056fea2646970667358221220cf5a305bbbc8246d37f2278f6c8c1347e70fec06e95000bd67b11ec3709d93ee64736f6c63430008140033";

type ChibiLandTestHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChibiLandTestHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChibiLandTestHelper__factory extends ContractFactory {
  constructor(...args: ChibiLandTestHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ChibiLandTestHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ChibiLandTestHelper__factory {
    return super.connect(runner) as ChibiLandTestHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChibiLandTestHelperInterface {
    return new Interface(_abi) as ChibiLandTestHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChibiLandTestHelper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChibiLandTestHelper;
  }
}
