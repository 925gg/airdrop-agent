/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2981Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721RoyaltyUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nonces__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "ChibiBattleItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiBattleItem__factory>;
    getContractFactory(
      name: "ChibiBattleItemFreeMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiBattleItemFreeMint__factory>;
    getContractFactory(
      name: "IChibiBattleItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiBattleItem__factory>;
    getContractFactory(
      name: "ChibiBattleOfNationsRaffle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiBattleOfNationsRaffle__factory>;
    getContractFactory(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiKingdom__factory>;
    getContractFactory(
      name: "ChibiKingdom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdom__factory>;
    getContractFactory(
      name: "ChibiKingdomExtraMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomExtraMint__factory>;
    getContractFactory(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiKingdom__factory>;
    getContractFactory(
      name: "ChibiKingdomPass",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomPass__factory>;
    getContractFactory(
      name: "ChibiKingdomPublicMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomPublicMint__factory>;
    getContractFactory(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiKingdom__factory>;
    getContractFactory(
      name: "ChibiKingdomRaffle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomRaffle__factory>;
    getContractFactory(
      name: "ChibiKingdomRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomRewards__factory>;
    getContractFactory(
      name: "IClashStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClashStaking__factory>;
    getContractFactory(
      name: "ChibiKingdomStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomStakingRewards__factory>;
    getContractFactory(
      name: "IClashStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClashStaking__factory>;
    getContractFactory(
      name: "ChibiKingdomV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomV2__factory>;
    getContractFactory(
      name: "ChibiKingdomV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiKingdomV3__factory>;
    getContractFactory(
      name: "ChibiLandReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLandReward__factory>;
    getContractFactory(
      name: "ClashStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashStaking__factory>;
    getContractFactory(
      name: "ClashStakingV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashStakingV2__factory>;
    getContractFactory(
      name: "ClashStakingV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashStakingV3__factory>;
    getContractFactory(
      name: "ClashStakingV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashStakingV4__factory>;
    getContractFactory(
      name: "ClashToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashToken__factory>;
    getContractFactory(
      name: "DepositRaffleMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositRaffleMinter__factory>;
    getContractFactory(
      name: "IERC1155Gateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Gateway__factory>;
    getContractFactory(
      name: "IERC20Gateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Gateway__factory>;
    getContractFactory(
      name: "IERC721Gateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Gateway__factory>;
    getContractFactory(
      name: "IGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGateway__factory>;
    getContractFactory(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiKingdom__factory>;
    getContractFactory(
      name: "IChibiKingdomV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiKingdomV3__factory>;
    getContractFactory(
      name: "IChibiLandReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiLandReward__factory>;
    getContractFactory(
      name: "IVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesting__factory>;
    getContractFactory(
      name: "Vesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vesting__factory>;
    getContractFactory(
      name: "ChibiTreasureChest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiTreasureChest__factory>;
    getContractFactory(
      name: "ChibiTreasureChestOpener",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiTreasureChestOpener__factory>;
    getContractFactory(
      name: "IERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Burnable__factory>;
    getContractFactory(
      name: "IChibiTreasureChest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiTreasureChest__factory>;
    getContractFactory(
      name: "ChibiLandTestHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLandTestHelper__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "AccessControlEnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC2981Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2981Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721RoyaltyUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC2981",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Math",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "Nonces",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Nonces>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "ChibiBattleItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiBattleItem>;
    getContractAt(
      name: "ChibiBattleItemFreeMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiBattleItemFreeMint>;
    getContractAt(
      name: "IChibiBattleItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiBattleItem>;
    getContractAt(
      name: "ChibiBattleOfNationsRaffle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiBattleOfNationsRaffle>;
    getContractAt(
      name: "IChibiKingdom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiKingdom>;
    getContractAt(
      name: "ChibiKingdom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdom>;
    getContractAt(
      name: "ChibiKingdomExtraMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomExtraMint>;
    getContractAt(
      name: "IChibiKingdom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiKingdom>;
    getContractAt(
      name: "ChibiKingdomPass",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomPass>;
    getContractAt(
      name: "ChibiKingdomPublicMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomPublicMint>;
    getContractAt(
      name: "IChibiKingdom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiKingdom>;
    getContractAt(
      name: "ChibiKingdomRaffle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomRaffle>;
    getContractAt(
      name: "ChibiKingdomRewards",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomRewards>;
    getContractAt(
      name: "IClashStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IClashStaking>;
    getContractAt(
      name: "ChibiKingdomStakingRewards",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomStakingRewards>;
    getContractAt(
      name: "IClashStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IClashStaking>;
    getContractAt(
      name: "ChibiKingdomV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomV2>;
    getContractAt(
      name: "ChibiKingdomV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiKingdomV3>;
    getContractAt(
      name: "ChibiLandReward",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLandReward>;
    getContractAt(
      name: "ClashStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashStaking>;
    getContractAt(
      name: "ClashStakingV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashStakingV2>;
    getContractAt(
      name: "ClashStakingV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashStakingV3>;
    getContractAt(
      name: "ClashStakingV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashStakingV4>;
    getContractAt(
      name: "ClashToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashToken>;
    getContractAt(
      name: "DepositRaffleMinter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositRaffleMinter>;
    getContractAt(
      name: "IERC1155Gateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Gateway>;
    getContractAt(
      name: "IERC20Gateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Gateway>;
    getContractAt(
      name: "IERC721Gateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Gateway>;
    getContractAt(
      name: "IGateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGateway>;
    getContractAt(
      name: "IChibiKingdom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiKingdom>;
    getContractAt(
      name: "IChibiKingdomV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiKingdomV3>;
    getContractAt(
      name: "IChibiLandReward",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiLandReward>;
    getContractAt(
      name: "IVesting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesting>;
    getContractAt(
      name: "Vesting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Vesting>;
    getContractAt(
      name: "ChibiTreasureChest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiTreasureChest>;
    getContractAt(
      name: "ChibiTreasureChestOpener",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiTreasureChestOpener>;
    getContractAt(
      name: "IERC1155Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Burnable>;
    getContractAt(
      name: "IChibiTreasureChest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiTreasureChest>;
    getContractAt(
      name: "ChibiLandTestHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLandTestHelper>;

    deployContract(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2981Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721RoyaltyUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerable>;
    deployContract(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerable>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ChibiBattleItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleItem>;
    deployContract(
      name: "ChibiBattleItemFreeMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleItemFreeMint>;
    deployContract(
      name: "IChibiBattleItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiBattleItem>;
    deployContract(
      name: "ChibiBattleOfNationsRaffle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleOfNationsRaffle>;
    deployContract(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdom>;
    deployContract(
      name: "ChibiKingdomExtraMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomExtraMint>;
    deployContract(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdomPass",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomPass>;
    deployContract(
      name: "ChibiKingdomPublicMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomPublicMint>;
    deployContract(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdomRaffle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomRaffle>;
    deployContract(
      name: "ChibiKingdomRewards",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomRewards>;
    deployContract(
      name: "IClashStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClashStaking>;
    deployContract(
      name: "ChibiKingdomStakingRewards",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomStakingRewards>;
    deployContract(
      name: "IClashStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClashStaking>;
    deployContract(
      name: "ChibiKingdomV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomV2>;
    deployContract(
      name: "ChibiKingdomV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomV3>;
    deployContract(
      name: "ChibiLandReward",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandReward>;
    deployContract(
      name: "ClashStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStaking>;
    deployContract(
      name: "ClashStakingV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV2>;
    deployContract(
      name: "ClashStakingV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV3>;
    deployContract(
      name: "ClashStakingV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV4>;
    deployContract(
      name: "ClashToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashToken>;
    deployContract(
      name: "DepositRaffleMinter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DepositRaffleMinter>;
    deployContract(
      name: "IERC1155Gateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Gateway>;
    deployContract(
      name: "IERC20Gateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Gateway>;
    deployContract(
      name: "IERC721Gateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Gateway>;
    deployContract(
      name: "IGateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGateway>;
    deployContract(
      name: "IChibiKingdom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "IChibiKingdomV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdomV3>;
    deployContract(
      name: "IChibiLandReward",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandReward>;
    deployContract(
      name: "IVesting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVesting>;
    deployContract(
      name: "Vesting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vesting>;
    deployContract(
      name: "ChibiTreasureChest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChest>;
    deployContract(
      name: "ChibiTreasureChestOpener",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChestOpener>;
    deployContract(
      name: "IERC1155Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Burnable>;
    deployContract(
      name: "IChibiTreasureChest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChest>;
    deployContract(
      name: "ChibiLandTestHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandTestHelper>;

    deployContract(
      name: "AccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "AccessControlEnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC2981Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2981Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721RoyaltyUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerable>;
    deployContract(
      name: "IAccessControlEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerable>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC2981",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "Nonces",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ChibiBattleItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleItem>;
    deployContract(
      name: "ChibiBattleItemFreeMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleItemFreeMint>;
    deployContract(
      name: "IChibiBattleItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiBattleItem>;
    deployContract(
      name: "ChibiBattleOfNationsRaffle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiBattleOfNationsRaffle>;
    deployContract(
      name: "IChibiKingdom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdom>;
    deployContract(
      name: "ChibiKingdomExtraMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomExtraMint>;
    deployContract(
      name: "IChibiKingdom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdomPass",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomPass>;
    deployContract(
      name: "ChibiKingdomPublicMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomPublicMint>;
    deployContract(
      name: "IChibiKingdom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "ChibiKingdomRaffle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomRaffle>;
    deployContract(
      name: "ChibiKingdomRewards",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomRewards>;
    deployContract(
      name: "IClashStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClashStaking>;
    deployContract(
      name: "ChibiKingdomStakingRewards",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomStakingRewards>;
    deployContract(
      name: "IClashStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClashStaking>;
    deployContract(
      name: "ChibiKingdomV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomV2>;
    deployContract(
      name: "ChibiKingdomV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiKingdomV3>;
    deployContract(
      name: "ChibiLandReward",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandReward>;
    deployContract(
      name: "ClashStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStaking>;
    deployContract(
      name: "ClashStakingV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV2>;
    deployContract(
      name: "ClashStakingV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV3>;
    deployContract(
      name: "ClashStakingV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashStakingV4>;
    deployContract(
      name: "ClashToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashToken>;
    deployContract(
      name: "DepositRaffleMinter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DepositRaffleMinter>;
    deployContract(
      name: "IERC1155Gateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Gateway>;
    deployContract(
      name: "IERC20Gateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Gateway>;
    deployContract(
      name: "IERC721Gateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Gateway>;
    deployContract(
      name: "IGateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGateway>;
    deployContract(
      name: "IChibiKingdom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdom>;
    deployContract(
      name: "IChibiKingdomV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiKingdomV3>;
    deployContract(
      name: "IChibiLandReward",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandReward>;
    deployContract(
      name: "IVesting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVesting>;
    deployContract(
      name: "Vesting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vesting>;
    deployContract(
      name: "ChibiTreasureChest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChest>;
    deployContract(
      name: "ChibiTreasureChestOpener",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChestOpener>;
    deployContract(
      name: "IERC1155Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Burnable>;
    deployContract(
      name: "IChibiTreasureChest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChest>;
    deployContract(
      name: "ChibiLandTestHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandTestHelper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
