/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Base__factory>;
    getContractFactory(
      name: "ChibiLand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLand__factory>;
    getContractFactory(
      name: "ChibiLandReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLandReward__factory>;
    getContractFactory(
      name: "ClashToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClashToken__factory>;
    getContractFactory(
      name: "IChibiLand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiLand__factory>;
    getContractFactory(
      name: "IChibiLandReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiLandReward__factory>;
    getContractFactory(
      name: "IVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesting__factory>;
    getContractFactory(
      name: "Vesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vesting__factory>;
    getContractFactory(
      name: "Chibi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Chibi__factory>;
    getContractFactory(
      name: "ChibiHeroItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiHeroItem__factory>;
    getContractFactory(
      name: "ChibiLandProtectorate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLandProtectorate__factory>;
    getContractFactory(
      name: "ChibiTreasureChest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiTreasureChest__factory>;
    getContractFactory(
      name: "ChibiTreasureChestPrize",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiTreasureChestPrize__factory>;
    getContractFactory(
      name: "IChibiHeroItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiHeroItem__factory>;
    getContractFactory(
      name: "IChibiLandProtectorate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiLandProtectorate__factory>;
    getContractFactory(
      name: "IChibiTreasureChest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiTreasureChest__factory>;
    getContractFactory(
      name: "IChibiTreasureChestPrize",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChibiTreasureChestPrize__factory>;
    getContractFactory(
      name: "ChibiLandTestHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChibiLandTestHelper__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "ERC1155Supply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Math",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Base>;
    getContractAt(
      name: "ChibiLand",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLand>;
    getContractAt(
      name: "ChibiLandReward",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLandReward>;
    getContractAt(
      name: "ClashToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClashToken>;
    getContractAt(
      name: "IChibiLand",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiLand>;
    getContractAt(
      name: "IChibiLandReward",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiLandReward>;
    getContractAt(
      name: "IVesting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesting>;
    getContractAt(
      name: "Vesting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Vesting>;
    getContractAt(
      name: "Chibi",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Chibi>;
    getContractAt(
      name: "ChibiHeroItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiHeroItem>;
    getContractAt(
      name: "ChibiLandProtectorate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLandProtectorate>;
    getContractAt(
      name: "ChibiTreasureChest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiTreasureChest>;
    getContractAt(
      name: "ChibiTreasureChestPrize",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiTreasureChestPrize>;
    getContractAt(
      name: "IChibiHeroItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiHeroItem>;
    getContractAt(
      name: "IChibiLandProtectorate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiLandProtectorate>;
    getContractAt(
      name: "IChibiTreasureChest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiTreasureChest>;
    getContractAt(
      name: "IChibiTreasureChestPrize",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChibiTreasureChestPrize>;
    getContractAt(
      name: "ChibiLandTestHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChibiLandTestHelper>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Supply>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Burnable>;
    deployContract(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Base>;
    deployContract(
      name: "ChibiLand",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLand>;
    deployContract(
      name: "ChibiLandReward",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandReward>;
    deployContract(
      name: "ClashToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashToken>;
    deployContract(
      name: "IChibiLand",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLand>;
    deployContract(
      name: "IChibiLandReward",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandReward>;
    deployContract(
      name: "IVesting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVesting>;
    deployContract(
      name: "Vesting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vesting>;
    deployContract(
      name: "Chibi",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Chibi>;
    deployContract(
      name: "ChibiHeroItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiHeroItem>;
    deployContract(
      name: "ChibiLandProtectorate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandProtectorate>;
    deployContract(
      name: "ChibiTreasureChest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChest>;
    deployContract(
      name: "ChibiTreasureChestPrize",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChestPrize>;
    deployContract(
      name: "IChibiHeroItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiHeroItem>;
    deployContract(
      name: "IChibiLandProtectorate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandProtectorate>;
    deployContract(
      name: "IChibiTreasureChest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChest>;
    deployContract(
      name: "IChibiTreasureChestPrize",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChestPrize>;
    deployContract(
      name: "ChibiLandTestHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandTestHelper>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "ERC1155Supply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Supply>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Burnable>;
    deployContract(
      name: "ERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "IERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Base>;
    deployContract(
      name: "ChibiLand",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLand>;
    deployContract(
      name: "ChibiLandReward",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandReward>;
    deployContract(
      name: "ClashToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClashToken>;
    deployContract(
      name: "IChibiLand",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLand>;
    deployContract(
      name: "IChibiLandReward",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandReward>;
    deployContract(
      name: "IVesting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVesting>;
    deployContract(
      name: "Vesting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vesting>;
    deployContract(
      name: "Chibi",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Chibi>;
    deployContract(
      name: "ChibiHeroItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiHeroItem>;
    deployContract(
      name: "ChibiLandProtectorate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandProtectorate>;
    deployContract(
      name: "ChibiTreasureChest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChest>;
    deployContract(
      name: "ChibiTreasureChestPrize",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiTreasureChestPrize>;
    deployContract(
      name: "IChibiHeroItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiHeroItem>;
    deployContract(
      name: "IChibiLandProtectorate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiLandProtectorate>;
    deployContract(
      name: "IChibiTreasureChest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChest>;
    deployContract(
      name: "IChibiTreasureChestPrize",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChibiTreasureChestPrize>;
    deployContract(
      name: "ChibiLandTestHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChibiLandTestHelper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
