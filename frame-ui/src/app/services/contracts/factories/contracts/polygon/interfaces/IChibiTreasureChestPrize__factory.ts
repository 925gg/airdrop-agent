/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IChibiTreasureChestPrize,
  IChibiTreasureChestPrizeInterface,
} from "../../../../contracts/polygon/interfaces/IChibiTreasureChestPrize";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "transactionId",
        type: "string",
      },
    ],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IChibiTreasureChestPrize__factory {
  static readonly abi = _abi;
  static createInterface(): IChibiTreasureChestPrizeInterface {
    return new Interface(_abi) as IChibiTreasureChestPrizeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IChibiTreasureChestPrize {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IChibiTreasureChestPrize;
  }
}
