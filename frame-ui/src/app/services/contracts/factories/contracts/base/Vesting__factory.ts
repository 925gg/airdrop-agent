/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Vesting,
  VestingInterface,
} from "../../../contracts/base/Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_vestingName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedClaimablePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "addBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "percentX100",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "unlockTime",
        type: "uint256[]",
      },
    ],
    name: "addUnlockEvents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimablePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimablePercentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeneficiaries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnlockEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "percentX100",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.UnlockEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "releasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c4438038062001c44833981016040819052620000349162000109565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006681620000a3565b5060018055600280546001600160a01b0319166001600160a01b0385161790556003829055600662000099828262000297565b5050505062000363565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200011f57600080fd5b83516001600160a01b03811681146200013757600080fd5b60208581015160408701519295509350906001600160401b03808211156200015e57600080fd5b818701915087601f8301126200017357600080fd5b815181811115620001885762000188620000f3565b604051601f8201601f19908116603f01168101908382118183101715620001b357620001b3620000f3565b816040528281528a86848701011115620001cc57600080fd5b600093505b82841015620001f05784840186015181850187015292850192620001d1565b60008684830101528096505050505050509250925092565b600181811c908216806200021d57607f821691505b6020821081036200023e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029257600081815260208120601f850160051c810160208610156200026d5750805b601f850160051c820191505b818110156200028e5782815560010162000279565b5050505b505050565b81516001600160401b03811115620002b357620002b3620000f3565b620002cb81620002c4845462000208565b8462000244565b602080601f831160018114620003035760008415620002ea5750858301515b600019600386901b1c1916600185901b1785556200028e565b600085815260208120601f198616915b82811015620003345788860151825594840194600190910190840162000313565b5085821015620003535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118d180620003736000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a0afd472116100b2578063c6189b6f11610081578063d1a82b0411610066578063d1a82b041461025e578063f2fde38b14610273578063fc0c546a1461028657600080fd5b8063c6189b6f14610243578063ced9bb051461025657600080fd5b8063a0afd472146101f2578063a0e2e5f614610207578063a961065514610227578063be9a65551461023a57600080fd5b8063715018a61161010957806389885049116100ee57806389885049146101a55780638da5cb5b146101b8578063913b722c146101dd57600080fd5b8063715018a61461018a578063857abbd41461019257600080fd5b80631cf1bb721461013b57806340e69bf01461016e57806341764eaf1461017757806348c54b9d14610180575b600080fd5b61015b610149366004611471565b60086020526000908152604090205481565b6040519081526020015b60405180910390f35b61015b60055481565b61015b60045481565b610188610299565b005b61018861045e565b6101886101a0366004611471565b610470565b61015b6101b3366004611471565b61068e565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610165565b6101e56106a7565b604051610165919061148e565b6101fa610709565b60405161016591906114db565b61015b610215366004611471565b60076020526000908152604090205481565b610188610235366004611600565b61077c565b61015b60035481565b6101886102513660046116c2565b61094e565b61015b610cb0565b610266610cc4565b6040516101659190611733565b610188610281366004611471565b610d52565b6002546101c5906001600160a01b031681565b6102a1610da9565b336000908152600760205260409020546103025760405162461bcd60e51b815260206004820152601260248201527f4e6f20746f6b656e7320746f20636c61696d000000000000000000000000000060448201526064015b60405180910390fd5b33600090815260076020908152604080832054600890925290912054106103915760405162461bcd60e51b815260206004820152602a60248201527f5573657220616c72656164792072656c656173656420616c6c20617661696c6160448201527f626c6520746f6b656e730000000000000000000000000000000000000000000060648201526084016102f9565b600080600061039e610dec565b600582905560048190559194509250905060006103bb3385610fa9565b9050801561044f5780600d60008282546103d5919061177c565b909155505033600090815260086020526040812080548392906103f990849061177c565b9091555050600254610415906001600160a01b03163383610ff7565b60408051338152602081018390527fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e910160405180910390a15b5050505061045c60018055565b565b61046661107c565b61045c60006110c2565b61047861107c565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e3919061178f565b60025490915081906001600160a01b039081169084160361058e576009805461050e906001906117a8565b8154811061051e5761051e6117bb565b906000526020600020906002020160010154421161057e5760405162461bcd60e51b815260206004820152601860248201527f56657374696e6720706572696f64206e6f7420656e646564000000000000000060448201526064016102f9565b600c5461058b90836117a8565b90505b600081116105de5760405162461bcd60e51b815260206004820152601560248201527f4e6f20746f6b656e7320746f207769746864726177000000000000000000000060448201526064016102f9565b826001600160a01b031663a9059cbb6105ff6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068891906117d1565b50505050565b60006106a18261069c610cb0565b610fa9565b92915050565b6060600b8054806020026020016040519081016040528092919081815260200182805480156106ff57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106e1575b5050505050905090565b60606009805480602002602001604051908101604052809291908181526020016000905b828210156107735783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061072d565b50505050905090565b61078461107c565b80518251146107d55760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420706172616d7300000000000000000000000000000000000060448201526064016102f9565b6000805b83518110156108575761081e8482815181106107f7576107f76117bb565b6020026020010151848381518110610811576108116117bb565b602002602001015161111f565b828181518110610830576108306117bb565b602002602001015182610843919061177c565b91508061084f816117f3565b9150506107d9565b506002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c5919061178f565b905081600d54600c546108d891906117a8565b6108e2919061177c565b8110156109315760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e20746f20636f7665720000000000000060448201526064016102f9565b81600c6000828254610943919061177c565b909155505050505050565b61095661107c565b80518251148015610968575060008251115b6109b45760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420706172616d7300000000000000000000000000000000000060448201526064016102f9565b600954600003610a2e57806000815181106109d1576109d16117bb565b602002602001015160035414610a295760405162461bcd60e51b815260206004820152601f60248201527f556e6c6f636b2074696d65206d7573742073746172742066726f6d205447450060448201526064016102f9565b610acc565b80600081518110610a4157610a416117bb565b602002602001015160096001600980549050610a5d91906117a8565b81548110610a6d57610a6d6117bb565b90600052602060002090600202016001015410610acc5760405162461bcd60e51b815260206004820152601e60248201527f556e6c6f636b2074696d652068617320746f20626520696e206f72646572000060448201526064016102f9565b600a5460005b8351811015610ca8578015610b6c5782610aed6001836117a8565b81518110610afd57610afd6117bb565b6020026020010151838281518110610b1757610b176117bb565b602002602001015111610b6c5760405162461bcd60e51b815260206004820152601e60248201527f556e6c6f636b2074696d652068617320746f20626520696e206f72646572000060448201526064016102f9565b838181518110610b7e57610b7e6117bb565b602002602001015182610b91919061177c565b9150612710821115610be55760405162461bcd60e51b815260206004820152601660248201527f496e76616c69642070657263656e742076616c7565730000000000000000000060448201526064016102f9565b610c96848281518110610bfa57610bfa6117bb565b6020026020010151848381518110610c1457610c146117bb565b6020026020010151604080518082019091529182526020820190815260098054600181018255600091909152915160029092027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af810192909255517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b090910155565b80610ca0816117f3565b915050610ad2565b50600a555050565b600080610cbb610dec565b50909392505050565b60068054610cd19061180c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfd9061180c565b8015610d4a5780601f10610d1f57610100808354040283529160200191610d4a565b820191906000526020600020905b815481529060010190602001808311610d2d57829003601f168201915b505050505081565b610d5a61107c565b6001600160a01b038116610d9d576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102f9565b610da6816110c2565b50565b600260015403610de5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600155565b60055460045460035460009283928392421015610e0f5760009591945092509050565b6000815b600954811015610f7e57600060098281548110610e3257610e326117bb565b906000526020600020906002020160000154905060098281548110610e5957610e596117bb565b906000526020600020906002020160010154421115610e8357610e7c818661177c565b9450610f6b565b6000620151806009610e966001866117a8565b81548110610ea657610ea66117bb565b90600052602060002090600202016001015460098581548110610ecb57610ecb6117bb565b906000526020600020906002020160010154610ee791906117a8565b610ef19190611846565b90506000620151806009610f066001876117a8565b81548110610f1657610f166117bb565b90600052602060002090600202016001015442610f3391906117a8565b610f3d9190611846565b905081610f4a8285611868565b610f549190611846565b610f5e908661177c565b9450839550505050610f7e565b5080610f76816117f3565b915050610e13565b506000610f8b828561177c565b9050612710811115610f9c57506127105b9692955090935090915050565b6001600160a01b038216600090815260086020908152604080832054600790925282205461271090610fdc908590611868565b610fe69190611846565b610ff091906117a8565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526110779084906112a7565b505050565b6000546001600160a01b0316331461045c576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102f9565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661119b5760405162461bcd60e51b815260206004820152602560248201527f5468652062656e6566696369617279277320616464726573732063616e6e6f7460448201527f206265203000000000000000000000000000000000000000000000000000000060648201526084016102f9565b600081116111eb5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742068617320746f2062652067726561746572207468616e20300060448201526064016102f9565b6001600160a01b038216600090815260076020526040812054900361126357600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790555b6001600160a01b03821660009081526007602052604090205461128790829061177c565b6001600160a01b0390921660009081526007602052604090209190915550565b60006112bc6001600160a01b03841683611323565b905080516000141580156112e15750808060200190518101906112df91906117d1565b155b15611077576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024016102f9565b6060610ff08383600084600080856001600160a01b03168486604051611349919061187f565b60006040518083038185875af1925050503d8060008114611386576040519150601f19603f3d011682016040523d82523d6000602084013e61138b565b606091505b509150915061139b8683836113a5565b9695505050505050565b6060826113ba576113b58261141a565b610ff0565b81511580156113d157506001600160a01b0384163b155b15611413576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016102f9565b5080610ff0565b80511561142a5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114610da657600080fd5b60006020828403121561148357600080fd5b8135610ff08161145c565b6020808252825182820181905260009190848201906040850190845b818110156114cf5783516001600160a01b0316835292840192918401916001016114aa565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561151d578151805185528601518685015292840192908501906001016114f8565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115695761156961152a565b604052919050565b600067ffffffffffffffff82111561158b5761158b61152a565b5060051b60200190565b600082601f8301126115a657600080fd5b813560206115bb6115b683611571565b611540565b82815260059290921b840181019181810190868411156115da57600080fd5b8286015b848110156115f557803583529183019183016115de565b509695505050505050565b6000806040838503121561161357600080fd5b823567ffffffffffffffff8082111561162b57600080fd5b818501915085601f83011261163f57600080fd5b8135602061164f6115b683611571565b82815260059290921b8401810191818101908984111561166e57600080fd5b948201945b838610156116955785356116868161145c565b82529482019490820190611673565b965050860135925050808211156116ab57600080fd5b506116b885828601611595565b9150509250929050565b600080604083850312156116d557600080fd5b823567ffffffffffffffff808211156116ed57600080fd5b6116f986838701611595565b935060208501359150808211156116ab57600080fd5b60005b8381101561172a578181015183820152602001611712565b50506000910152565b602081526000825180602084015261175281604085016020870161170f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106a1576106a1611766565b6000602082840312156117a157600080fd5b5051919050565b818103818111156106a1576106a1611766565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156117e357600080fd5b81518015158114610ff057600080fd5b60006001820161180557611805611766565b5060010190565b600181811c9082168061182057607f821691505b60208210810361184057634e487b7160e01b600052602260045260246000fd5b50919050565b60008261186357634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176106a1576106a1611766565b6000825161189181846020870161170f565b919091019291505056fea2646970667358221220a33815c5bb56640d3c6959c660c58dcf224153a22a9a29321021590cf95dffee64736f6c63430008140033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _start,
      _vestingName,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _start: BigNumberish,
    _vestingName: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _start,
      _vestingName,
      overrides || {}
    ) as Promise<
      Vesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vesting__factory {
    return super.connect(runner) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new Interface(_abi) as VestingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vesting {
    return new Contract(address, _abi, runner) as unknown as Vesting;
  }
}
